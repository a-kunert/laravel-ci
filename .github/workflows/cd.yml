name: Build -> Test -> Push
on:
  push:
    branches: [ main ]

env:
  TEST_TAG: myapp:test

jobs:
  build-test-push:

    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

#      - name: Cache Docker Layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Build for Testing
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./Dockerfile
#          load: true
#          builder: ${{ steps.buildx.outputs.name }}
#          target: testing
#          tags: ${{ env.TEST_TAG }}
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Run Docker Testing Environment
        run: docker-compose -f ./docker/testing/docker-compose.yml up

#      - name: Check the env
#        run: docker-compose -f ./docker/testing/docker-compose.yml exec -T laravel.test cat .env

      - name: Check the db
        run: docker-compose -f ./docker/testing/docker-compose.yml exec -T mysql mysql -u test -ppassword -e "SHOW DATABASES;"

      - name: Run Phpunit Test config
        run: docker-compose -f ./docker/testing/docker-compose.yml exec -T laravel.test php artisan test --stop-on-failure --filter "test_the_application_returns_a_successful_response"

      - name: Run Phpunit
        run: docker-compose -f ./docker/testing/docker-compose.yml exec -T laravel.test php artisan test --stop-on-failure --testsuite All

      - name: Run Browser Tests
        run: docker-compose -f ./docker/testing/docker-compose.yml exec -T laravel.test php artisan dusk  --stop-on-failure

      - name: Get Docker Tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            aaronkunert/laravel-app
          tags: |
            type=ref,event=push

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          target: production
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache


